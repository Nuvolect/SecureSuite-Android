<!DOCTYPE html>

<!--
  ~ Copyright (c) 2017. Nuvolect LLC
  -->

<html ng-app="myApp" ng-controller="debugController">
<head>
    <title>Developer</title>

    <script src="/js/angular.min.js"></script>
    <link href="/css/bootstrap.css" rel="stylesheet">
    <link href="/css/bootstrap-colorselector.min.css" rel="stylesheet">
    <link href="/css/app.css" rel="stylesheet">
    <link href="/css/probe.css" rel="stylesheet">

</head>

<body>
<!-- Bootstrap core JavaScript -->
<script src="/js/jquery-1.11.2.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="/js/bootstrap-colorselector.min.js"></script>
<div ng-include="'./navbar.htm'"></div>

<h1 align="center">Developer</h1>
<br>

<div class="container">
    <!-- https://github.com/flaute/bootstrap-colorselector-->
    <div class="row">
        <div class='col-sm-2'>
            <h5>Event color</h5>
        </div>
        <div class='col-sm-8'>
            <select id="colorselector">
                <option value="106" data-color="#A0522D">sienna</option>
                <option value="47" data-color="#CD5C5C" selected="selected">indianred</option>
                <option value="87" data-color="#FF4500">orangered</option>
                <option value="17" data-color="#008B8B">darkcyan</option>
                <option value="18" data-color="#B8860B">darkgoldenrod</option>
                <option value="68" data-color="#32CD32">limegreen</option>
                <option value="42" data-color="#FFD700">gold</option>
                <option value="77" data-color="#48D1CC">mediumturquoise</option>
                <option value="107" data-color="#87CEEB">skyblue</option>
                <option value="46" data-color="#FF69B4">hotpink</option>
                <option value="47" data-color="#CD5C5C">indianred</option>
                <option value="64" data-color="#87CEFA">lightskyblue</option>
                <option value="13" data-color="#6495ED">cornflowerblue</option>
                <option value="15" data-color="#DC143C">crimson</option>
                <option value="24" data-color="#FF8C00">darkorange</option>
                <option value="78" data-color="#C71585">mediumvioletred</option>
                <option value="123" data-color="#000000">black</option>
            </select>
        </div>
    </div>

    <table align="center">

        <tr>
            <td><button ng-click="runTest('encode_hash',encode_hash_data)">Encode hash</button></td>
            <td> <input type="text" ng-model="encode_hash_data" size="50"/> </td>
            <td> Result: {{ encode_hash_result }} </td>
        </tr>
        <tr>
            <td><button ng-click="runTest('decode_hash',decode_hash_data)">Decode hash</button></td>
            <td> <input type="text" ng-model="decode_hash_data" size="50"/> </td>
            <td> Result: {{ decode_hash_result }} </td>
        </tr>
        <tr>
            <td> <button ng-click="runTest('mime', mime_data )">Mime type</button> </td>
            <td> <input type="text" ng-model="mime_data" size="50"/> </td>
            <td> Result: {{ mime_result }} </td>
        </tr>
        <tr>
            <td><button ng-click="runTest('is_reachable',is_reachable_data)">Is reachable</button></td>
            <td> <input type="text" ng-model="is_reachable_data" size="50"/> </td>
            <td>Result: {{ is_reachable_result }}</td>
        </tr>
        <tr>
            <td>
                JQuery version
            </td>
            <td>
                {{jquery_version}}
            </td>
        </tr>
        <tr>
            <td>
                AngularJS version
            </td>
            <td>
                {{angular_version}}
            </td>
        </tr>
    </table>

</div>
<div class="container">

    <hr color="navy" style="height: 2px">
    <h3 align="center">API</h3>
    <br>

    <table align="center">
        <tr>
            <th>API</th>
            <th>Result</th>
        </tr>
        <tr>
            <td> <button ng-click="self_ip_test()">/sync/cmd=self_ip_test</button> </td>
            <td>{{ self_ip_test }}</td>
        </tr>
    </table>

</div>

<div class="container">

    <hr color="navy" style="height: 2px">
    <h3 align="center">Device Sync</h3>
    <br>

    <table align="center">

        <tr>
            <th>Data</th>
            <th>This Device</th>
            <th>Companion Device</th>
        </tr>
        <tr>
            <td>IP:port</td>
            <td>{{ my_ip_port }}</td>
            <td>{{ companion_ip_port }}</td>
        </tr>
        <tr>
            <td>Incoming update</td>
            <td>{{ my_incoming_update }}</td>
            <td>{{ companion_incoming_update }}</td>
        </tr>
        <tr>
            <td>Outgoing update</td>
            <td>{{ my_outgoing_update }}</td>
            <td>{{ companion_outgoing_update }}</td>
        </tr>

    </table>

</div>

<br>
<br>
<div ng-include="'/footer.htm'"></div>

<script>

var app = angular.module('myApp', []);
app.controller('debugController', function($scope, $http, $parse) {

  $scope.year = new Date().getFullYear(); // footer copyright year

  $('#colorselector').colorselector();
  $('#colorselector').colorselector('setColor', '#87CEFA');
debugger;
  $('#colorselector').colorselector({

      callback: function (value, color, title) {

         console.log('color: '+color);
      }
  });

   $scope.mySyncState = function(){

       // First get data for this device, then a second call for the companion device
       $http.get("/sync?cmd=sync_state")
           .then(function (response) {
           $scope.my_ip_port = response.data.my_ip_port;
           $scope.companion_ip_port = response.data.companion_ip_port;
           $scope.my_incoming_update = response.data.incoming_update;
           $scope.my_outgoing_update = response.data.outgoing_update;

           var companion_url = "https://"+response.data.companion_ip_port;

           // Get data for the companion device
           $scope.companionSyncState( companion_url );
       });
   };

   $scope.companionSyncState = function( url ){

        $http.get( url+"/sync?cmd=sync_state")
            .then(function (response) {

            $scope.companion_incoming_update = response.data.incoming_update;
            $scope.companion_outgoing_update = response.data.outgoing_update;
        });
   };

  $scope.runTest = function( id, data ){

     $http.get("/admin?cmd=debug&test_id="+id+"&data="+data)
       .then(function (response) {

        // test_id the test name and is bound to the Angular result variable

        // Get the model
        var model = $parse(response.data.test_id+"_result");

        // Display error message if any
        var result = response.data.result;
        if( response.data.error.length > 0)
            result = response.data.error;

        // Assigns a value to it
        model.assign($scope, result);
     });
   };

  $scope.self_ip_test = function(){

     $http.get("/sync?cmd=self_ip_test&ip_port="+$scope.my_ip_port)
       .then(function (response) {

        $scope.self_ip_test = response;
     });
   };

   $scope.jquery_version = jQuery.fn.jquery;
   $scope.angular_version = angular.version.full;

   $scope.mySyncState();


});

</script>
</body>
</html>