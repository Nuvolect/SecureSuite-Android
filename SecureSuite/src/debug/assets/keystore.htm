<!DOCTYPE html>
<!--
  ~ Copyright (c) 2017. Nuvolect LLC
  ~
  ~ This program is free software: you can redistribute it and/or modify it under the terms of the GNU
  ~ General Public License as published by the Free Software Foundation, either version 3 of the License,
  ~ or (at your option) any later version.
  ~
  ~ Contact legal@nuvolect.com for a less restrictive commercial license if you would like to use the
  ~ software without the GPLv3 restrictions.
  ~
  ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
  ~ even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License along with this program.  If not,
  ~ see <http://www.gnu.org/licenses/>.
  ~
  -->

<html ng-app="myApp" ng-controller="myController">
<head>
    <title>Keystore</title>

    <script src="/js/jquery-1.11.2.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/angular.min.js"></script>

    <link href="/css/bootstrap.css" rel="stylesheet">
    <link href="/css/app.css" rel="stylesheet">
    <link href="/css/themes/blue_wheat.css" rel="stylesheet" id="theme">

</head>

<body>
<div ng-include="'/navbar.htm'"></div>

<div class="container">

    <br>
    <br>
    <div align="center">
        <h1>Keystore</h1>
    </div>
    <br>

    <div align="left">

        <table align="center">

            <tr>
                <td>
                    Android Lockscreen:
                </td>
                <td>
                    {{ lockscreen_test }}
                </td>
                <td>
                    {{ lockscreen_test_message }}
                </td>
            </tr>
            <tr>
                <td>
                    <button ng-click="createKey()">Create<br>key pair</button>
                </td>
                <td>
                    <input placeholder="Enter alias" type="text" ng-model="create_key_alias" size="15"/>
                </td>
                <td>
                    {{ public_key }}
                    {{ create_key_error }}
                </td>
            </tr>
            <tr>
                <td>
                    <button ng-click="deleteKey()">Delete<br>key pair</button>
                </td>
                <td>
                    <input placeholder="Enter alias" type="text" ng-model="delete_key_alias" size="15"/>
                </td>
                <td>
                    {{ delete_key_error }}
                </td>
            </tr>
            <tr>
                <td>
                    <button ng-click="encryptWithKey()">Encrypt/w<br>public key</button>
                </td>
                <td>
                    <input placeholder="Enter alias" type="text" ng-model="encrypt_key_alias" size="15"/>
                </td>
                <td>
                    <input placeholder="Enter cleartext" type="text" ng-model="encrypt_cleartext" size="50"/>
                    {{ encrypt_error }}
                </td>
            </tr>
            <tr bgcolor="#dfeedf">
               <td colspan="3">{{ ciphertext }}</td>
            </tr>
            <tr>
                <td>
                    <button ng-click="decryptWithKey()">Decrypt/w<br>private key</button>
                </td>
                <td>
                    <input placeholder="Enter alias" type="text" ng-model="decrypt_key_alias" size="15"/>
                </td>
                <td>
                    {{ decrypt_cleartext }}
                    {{ decrypt_error }}
                </td>
            </tr>
            <tr>
                <td>
                    <button ng-click="getKeys()">Get<br>key pairs</button>
                </td>
            </tr>
            <tr ng-repeat="key in keys | orderBy: 'alias'">
                <td  bgcolor="#deeff5">
                    {{ key.alias }}
                </td>
                <td colspan="2" style="white-space:pre" bgcolor="#deeff5" >
                    {{ key.certificate }}
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <a href="https://developer.android.com/training/articles/keystore.html">Android Keystore System</a>
                    <br>
                    <a href="https://developer.android.com/reference/javax/crypto/Cipher.html">Android Cipher</a>
                    <br>
                    <a href="https://github.com/nelenkov/android-keystore">github.com/nelenkov/android-keystore</a>
                    <br>
                    <a href="http://nelenkov.blogspot.com/2012/05/storing-application-secrets-in-androids.html">Blog 2012/05</a>
                    <br>
                    <a href="http://nelenkov.blogspot.com/2013/08/credential-storage-enhancements-android-43.html">Blog 2013/08</a>
                </td>
                <td>
                    Android developer training, keystore system <br>
                    Android developer reference, Cipher <br>
                    Sample code for storing application secrets in Android credential storage <br>
                    Storing application secrets in Android's credential storage <br>
                    Password storage in Android M <br>
                </td>
            </tr>

        </table>

    </div>


</div>

<br>
<br>
<br>

<div ng-include="'footer.htm'"></div>

<script>

var app = angular.module('myApp', []);
app.controller('myController', function($scope, $http, $parse) {

  $http.get("/admin/?cmd=debug&test_id=lockscreen_test")
    .then(function (response) {

     $scope.lockscreen_test = response.data.result.lockscreen_test;

     if( response.data.result.error.length > 0 )
        $scope.lockscreen_test_message = response.data.result.error;
     else
        $scope.lockscreen_test_message =
            "Must be enabled to use keystore. <br> Disable and the keystore will be deleted."
  });

  $scope.create_key_error = "A key pair's public key is used for encryption and private key for decryption.";

  $scope.createKey = function(){

     $scope.create_key_error = "";

     $http.get("/admin/?cmd=debug&test_id=create_key&key_alias="+$scope.create_key_alias)
       .then(function (response) {

        $scope.create_key_error = response.data.result.error;
        if( response.data.result.error.length == 0)
            $scope.create_key_error = "Success";
            $scope.public_key = response.data.result.public_key;
     });
   };

  $scope.deleteKey = function(){

     $scope.delete_key_error = "";

     $http.get("/admin/?cmd=debug&test_id=delete_key&key_alias="+$scope.delete_key_alias)
       .then(function (response) {

        $scope.delete_key_error = response.data.result.error;
        if( response.data.result.error.length == 0)
            $scope.delete_key_error = "Success";
     });
   };

  $scope.encryptWithKey = function(){

     $scope.encrypt_error = "";
     $scope.ciphertext = "";

     $http.get("/admin/?cmd=debug&test_id=encrypt&key_alias="+$scope.encrypt_key_alias
                                                   +"&cleartext="+$scope.encrypt_cleartext)
       .then(function (response) {

        if( response.data.result.error.length == 0){
            $scope.ciphertext = response.data.result.ciphertext;
        }
        else
            $scope.encrypt_error = response.data.result.error;
     });
   };

  $scope.decryptWithKey = function(){

     $scope.decrypt_error = "";
     $scope.decrypt_cleartext = "";

     $http.get("/admin/?cmd=debug&test_id=decrypt&key_alias="+$scope.decrypt_key_alias
                                                 +"&ciphertext="+$scope.ciphertext)
       .then(function (response) {

        $scope.decrypt_error = response.data.result.error;

        if( response.data.result.error.length == 0){
            $scope.decrypt_cleartext = response.data.result.cleartext;
        }
        else
            $scope.decrypt_error = response.data.result.error;
     });
   };

  $scope.getKeys = function(){

     $scope.keys = [];

     $http.get("/admin/?cmd=debug&test_id=get_keys")
       .then(function (response) {

        $scope.keys = response.data.keys;
     });
   };

});

</script>
</body>
</html>